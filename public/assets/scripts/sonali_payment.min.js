function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function loadPaymentPanel() {
  var app_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var process_type_id = arguments.length > 1 ? arguments[1] : undefined;
  var payment_step_id = arguments.length > 2 ? arguments[2] : undefined;
  var target_element_id = arguments.length > 3 ? arguments[3] : undefined;
  var contact_name = arguments.length > 4 ? arguments[4] : undefined;
  var contact_email = arguments.length > 5 ? arguments[5] : undefined;
  var contact_phone = arguments.length > 6 ? arguments[6] : undefined;
  var contact_address = arguments.length > 7 ? arguments[7] : undefined;
  var unfixed_amount_array = arguments.length > 8 ? arguments[8] : undefined;
  // Reset the html content
  document.getElementById(target_element_id).innerHTML = '';
  if (_typeof(unfixed_amount_array) !== 'object' && unfixed_amount_array == null) {
    alert('Error: Unfixed amounts variable should be an object, ' + _typeof(unfixed_amount_array) + ' given');
  }
  var form_data = new FormData();
  form_data.append('app_id', app_id);
  form_data.append('process_type_id', process_type_id);
  form_data.append('payment_step_id', payment_step_id);
  form_data.append('contact_name', contact_name);
  form_data.append('contact_email', contact_email);
  form_data.append('contact_phone', contact_phone);
  form_data.append('contact_address', contact_address);
  form_data.append('unfixed_amount_array', JSON.stringify(unfixed_amount_array));
  $.ajax({
    url: '/spg/payment-panel',
    dataType: 'json',
    // what to expect back from the PHP script, if anything
    cache: false,
    contentType: false,
    processData: false,
    data: form_data,
    type: 'post',
    success: function success(response) {
      if (response.status === true) {
        document.getElementById(target_element_id).innerHTML = response.data.html;
      } else {
        alert(response.message);
      }
    }
  });
}
var is_payment_info_loaded = false;
function loadPaymentInfo(process_type_id, ref_id, content_div_id, content_loader_id) {
  if (!is_payment_info_loaded) {
    $.ajax({
      url: "/spg/payment-view/" + process_type_id + "/" + ref_id,
      type: 'GET',
      dataType: 'json',
      success: function success(response) {
        $("#" + content_div_id).html(response.response);
        $("#" + content_loader_id).hide();
        is_payment_info_loaded = true;
      },
      error: function error(jqXHR, textStatus, errorThrown) {
        console.log(errorThrown);
      }
    });
  }
}
